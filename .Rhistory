ls
list.files()
my_outcome<-read.csv("outcome-of-care-measures.csv",colClasses = "character")
if(sum(state==factor(my_outcome[,7], exclude="NA"))==0)
{
stop("invalid state")
}# end state check
#set up means to determine outcome column
my_out<-rbind(type_prob=c("heart attack","heart failure", "pneumonia"),org_col=c(11,17,23))
colnames(my_out)<-c("heart attack","heart failure","pneumonia")
#check to see if valid
if(sum(outcome==factor(my_out[1,]))==0)
{
stop ("invalid outcome")
}# end outcome check
# Reduce to the state value
my_state_temp <-subset(my_outcome,my_outcome$State==state)
#get the correct column
outcome_col<-as.numeric(my_out[2,outcome])
#find the minimum value
my_out_val_min <- min(as.numeric(my_state_temp[,outcome_col]),na.rm=TRUE)
#find the list of hospital that meet the value
#sort alphabetically
temp_st <- rbind(c(1:length(colnames(my_outcome))),colnames(my_outcome))
target_out <- temp_st[2,outcome_col]
View(my_outcome)
reduce_data <- my_outcome(c(1,2,5,11,17,23))
reduce_data <- my_outcome[c(1,2,5,11,17,23)]
colnames(reduce_data)
reduce_data <- my_outcome[c(1,2,6,11,17,23)]
colnames(reduce_data)
reduce_data <- my_outcome[c(1,2,7,11,17,23)]
colnames(reduce_data)
colnames(reduce_data)<-c("ID","Hospital","State","Attack","Failure","Pneumonia")
colnames(reduce_data)
attack_scores<-sort(is.numeric(reduce_data[,4]))
attack_scores<-sort(is.numeric(reduce_data[,4]),exclude=NA)
sort(reduce_data[,4], exclude=NA)
sort(reduce_data[,4])
attack_scores<-sort(as.numeric(reduce_data[,4]),exclude=NA)
attack_scores<-sort(as.numeric(reduce_data[,4]))
attack_scores
sort(unique(atack_data))
attack_scores<-sort(uniqe(as.numeric(reduce_data[,4])))
attack_scores<-sort(unique(as.numeric(reduce_data[,4])))
attack_freq <-rbind(attack_scores,0)
attack_freq
for( i in attacK_score){ attack_freq<-sum(reduce_data[ ,7]==attack_score[i])   }
for( i in attacK_scores){ attack_freq<-sum(reduce_data[ ,7]==attack_scores[i])   }
for( i in attacK_scores){ attack_freq<-sum(reduce_data[ ,7]==attack_scores[i])   }
attack_scores
attack_scores[7]
sum(reduce_data[ ,7]==attack_scores[1])
reduce_data[ ,7]
View(reduce_data)
sum(reduce_data[ ,4]==attack_scores[1])
for( i in attacK_scores){ attack_freq<-sum(reduce_data[ ,4]==attack_scores[i])   }
for( i in attacK_scores){ attack_freq[i,2]<-sum(reduce_data[ ,4]==attack_scores[i])   }
for( i in c(1:length(attacK_scores){ attack_freq[i,2]<-sum(reduce_data[ ,4]==attack_scores[i])   }
for( i in c(1:length(attacK_scores)){ attack_freq[i,2]<-sum(reduce_data[ ,4]==attack_scores[i])   }
